name: Deploy Terraform
on:
  push:
    branches: [main]

permissions:
  id-token: write
  contents: read

jobs:
  plan:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: [dev, prod]
    steps:
      - uses: actions/checkout@v3
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.5.0"
      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Terraform Init
        run: terraform init -backend-config=./environments/${{ matrix.environment }}/backend.tfvars
        working-directory: ./environments/${{ matrix.environment }}
      - name: Check directory
        run: ls -l ./environments/${{ matrix.environment }}
        
      - name: Terraform Plan
        run: terraform plan -out=tfplan -var "client_id=${{ secrets.ARM_CLIENT_ID }}" -var "client_secret=${{ secrets.ARM_CLIENT_SECRET }}" -var "subscription_id=${{ secrets.ARM_SUBSCRIPTION_ID }}" -var "tenant_id=${{ secrets.ARM_TENANT_ID }}"
        working-directory: ./environments/${{ matrix.environment }}
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      - name: Verify tfplan Exists
        run: ls -l ./environments/${{ matrix.environment }}/tfplan || echo "tfplan not found"
      - name: Upload Plan Artifact
        uses: actions/upload-artifact@v4
        with:
          name: tfplan-${{ matrix.environment }}
          path: ./environments/${{ matrix.environment }}/tfplan

  deploy:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: plan
    strategy:
      matrix:
        environment: [dev, prod]
    steps:
      - uses: actions/checkout@v3
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.5.0"
      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Terraform Init
        run: terraform init -backend-config=./environments/${{ matrix.environment }}/backend.tfvars
        working-directory: ./environments/${{ matrix.environment }}
      - name: Download Plan Artifact
        uses: actions/download-artifact@v4
        with:
          name: tfplan-${{ matrix.environment }}
          path: ./environments/${{ matrix.environment }}
      - name: Verify tfplan Downloaded
        run: ls -l ./environments/${{ matrix.environment }}/tfplan || echo "tfplan not downloaded"
      - name: Terraform Apply
        run: terraform apply "tfplan"
        working-directory: ./environments/${{ matrix.environment }}
