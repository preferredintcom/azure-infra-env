name: Deploy Terraform
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  id-token: write   # For OIDC or artifact upload/download
  contents: read    # For checkout

jobs:
  plan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.5.0"
      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Verify Azure Login
        run: az account show  # Confirms login works
      - name: Terraform Init
        run: terraform init -backend=false  # Disable cloud backend for local plan
        working-directory: ./environments/dev
      - name: Terraform Plan
        run: terraform plan -out=tfplan
        working-directory: ./environments/dev
      - name: Verify tfplan Exists
        run: ls -l environments/dev/tfplan || echo "tfplan not found"
      - name: Upload Plan Artifact
        uses: actions/upload-artifact@v3
        with:
          name: tfplan
          path: environments/dev/tfplan
          if-no-files-found: error

  deploy:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: plan
    steps:
      - uses: actions/checkout@v3
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.5.0"
      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Terraform Init
        run: terraform init -backend=false  # Consistent with plan
        working-directory: ./environments/dev
      - name: Download Plan Artifact
        uses: actions/download-artifact@v3
        with:
          name: tfplan
          path: environments/dev/
      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan
        working-directory: ./environments/dev